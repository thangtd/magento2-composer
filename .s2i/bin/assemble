#!/bin/bash -e
# The assemble script builds the application artifacts from a source and 
# places them into appropriate directories inside the image.

mkdir -p /tmp/preassemble

# Execute the default S2I script
source ${STI_SCRIPTS_PATH}/assemble

mkdir -p /tmp/postassemble

mkdir -p ./.composer/

export COMPOSER_HOME=./.composer/

cp ./auth.json ./.composer/

echo "Updating permissions for Magento folder ..."

cd ${APP_DATA}

ls -l ${APP_DATA}/var

find ${APP_DATA}/var ${APP_DATA}/vendor ${APP_DATA}/pub/static ${APP_DATA}/pub/media ${APP_DATA}/app/etc -type f -exec chmod u+w {} \; && find ${APP_DATA}/var ${APP_DATA}/vendor ${APP_DATA}/pub/static ${APP_DATA}/pub/media ${APP_DATA}/app/etc -type d -exec chmod u+w {} \; && chmod u+x ${APP_DATA}/bin/magento

echo "Updating permissions for Magento folder ..."

chown -R default.root ${APP_DATA}/

ls -l ${APP_DATA}/var

# You can write S2I scripts in any programming language, as long as the 
# scripts are executable inside the builder image.